/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import java.awt.event.ActionListener;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import model.ExpenseStatus;

/**
 *
 * @author Admin
 */
public class ExpensesView extends javax.swing.JPanel {

    /**
     * Creates new form ExpensesView3
     */
    public ExpensesView() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        comboCategory = new javax.swing.JComboBox();
        btnDisplay = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();
        btnAddExpense = new javax.swing.JButton();
        lblGenerateReport = new javax.swing.JLabel();
        lblCategory = new javax.swing.JLabel();
        lblMonth = new javax.swing.JLabel();
        comboMonth = new javax.swing.JComboBox();

        comboCategory.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        comboCategory.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "View All", "Rent/Utilities", "Groceries", "Clothing", "Transportation/Car", "Education", "Entertainment", "Other" }));
        comboCategory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboCategoryActionPerformed(evt);
            }
        });

        btnDisplay.setText("View Expenses");

        btnClear.setText("Clear");

        btnAddExpense.setText("Add Expense");

        lblGenerateReport.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblGenerateReport.setText("Generate an Expense Report");

        lblCategory.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblCategory.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/categoryIcon.png"))); // NOI18N
        lblCategory.setText("    Select a Category");
        lblCategory.setToolTipText("");

        lblMonth.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblMonth.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/monthIcon.png"))); // NOI18N
        lblMonth.setText("    Select a Month");
        lblMonth.setToolTipText("");

        comboMonth.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        comboMonth.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "View All", "January", "February", "March", "April", "May", "June", "July", "August", "September", "November", "December" }));
        comboMonth.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboMonthActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblMonth)
                            .addComponent(lblGenerateReport))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 217, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(comboMonth, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(comboCategory, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblCategory)
                            .addComponent(btnDisplay))
                        .addGap(163, 163, 163)
                        .addComponent(btnClear, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnAddExpense, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(76, 76, 76))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblGenerateReport)
                .addGap(62, 62, 62)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblMonth)
                    .addComponent(comboMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(88, 88, 88)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCategory)
                    .addComponent(comboCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 150, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDisplay)
                    .addComponent(btnClear)
                    .addComponent(btnAddExpense))
                .addGap(20, 20, 20))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void comboCategoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboCategoryActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboCategoryActionPerformed

    private void comboMonthActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboMonthActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboMonthActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddExpense;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnDisplay;
    private javax.swing.JComboBox comboCategory;
    private javax.swing.JComboBox comboMonth;
    private javax.swing.JLabel lblCategory;
    private javax.swing.JLabel lblGenerateReport;
    private javax.swing.JLabel lblMonth;
    // End of variables declaration//GEN-END:variables


    public void addController(ActionListener controller){
        // Adding event handlers to the menu and nav bar items
        btnDisplay.addActionListener(controller);	
        btnDisplay.setActionCommand("btnDisplay"); 

        btnAddExpense.addActionListener(controller);	
        btnAddExpense.setActionCommand("btnAddExpense");     
        
        btnClear.addActionListener(controller);
        btnClear.setActionCommand("btnClear"); 
    } 
    
    public String getCategory() {
        String category = comboCategory.getSelectedItem().toString();
        return category;
    }
    
    public String getMonth() {
        String month = getShortMonth(comboMonth.getSelectedItem().toString());
        return month;
    }

    public String getShortMonth(String month){
        String shortMonth="";
        switch(month){
            case "January":
                shortMonth = "Jan";
                break;
            case "February":
                shortMonth = "Feb";
                break;
            case "March":
                shortMonth = "Mar";
                break;
            case "April":
                shortMonth = "Apr";
                break;
            case "May":
                shortMonth = "May";
                break;
            case "June":
                shortMonth ="Jun";
                break;
            case "July":
                shortMonth = "Jul";
                break;
            case "August":
                shortMonth = "Aug";
                break;
            case "September":
                shortMonth = "Sep";
                break;
            case "October":
                shortMonth = "Oct";
                break;
            case "November":
                shortMonth = "Nov";
                break;
            case "December":
                shortMonth = "Dec";
                break;
            default:
                shortMonth = "View All";
                break;
        }
        return shortMonth;
    }
    
    public void displayExpenses(String category,String month,Object[][] rowData) {
        DisplayExpensesView displayExpensesPopUp = new DisplayExpensesView(category,month,rowData); 
        controller.DisplayExpensesController displayExpensesController = new controller.DisplayExpensesController();
        displayExpensesController.addView(displayExpensesPopUp);
        displayExpensesPopUp.addController(displayExpensesController);
        ExpenseStatus expenseModel = new ExpenseStatus(); 
        displayExpensesController.addModel(expenseModel);
    }
    
    public void displayNoExpenses() {
        JOptionPane.showMessageDialog(null, "There are no expense entries for the selected period/category.", "No Expenses", JOptionPane.ERROR_MESSAGE);
    }
    
    
    public void displayAddExpense() {
        AddExpenseView addExpensePopUp = new AddExpenseView(); 
        controller.AddExpenseController addExpenseController = new controller.AddExpenseController();
        addExpenseController.addView(addExpensePopUp);
        addExpensePopUp.addController(addExpenseController);
        ExpenseStatus expenseModel = new ExpenseStatus(); 
        addExpenseController.addModel(expenseModel);
        
    }

    public void clearValues() {
        comboMonth.setSelectedItem("View All"); 
        comboCategory.setSelectedItem("View All"); 
    }
    

    

}
