/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import java.awt.event.ActionListener;
import java.util.Observable;
import javax.swing.JOptionPane;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;

/**
 *
 * @author Admin
 */
public class IncomeView extends javax.swing.JPanel {

    /**
     * Creates new form IncomeView2
     */
    public IncomeView() {
        initComponents();
    }
    
    public void addController(ActionListener controller){
        // Adding event handlers to the menu and nav bar items
        btnClear.addActionListener(controller);	
        btnClear.setActionCommand("btnClear"); 

        btnUpdate.addActionListener(controller);	
        btnUpdate.setActionCommand("btnUpdate");     
        
    } 
    
    public double getTotal() {
        double totalVal = (double)spinSalary.getValue() + (double)spinInvestments.getValue() + (double)spinBonus.getValue() + (double)spinTax.getValue(); 
        return totalVal; 
    }
    
    public double getSalary() {
        double salary = (Double)spinSalary.getValue();
        return salary;
    }
    
    public double getInvestments() {
        double investments = (Double)spinInvestments.getValue(); 
        return investments;
    }
    
    public double getTax() {
        double tax = (Double)spinTax.getValue();
        return tax;
        
    }
    
    public double getBonus() {
        double bonus = (Double)spinBonus.getValue();
        return bonus;
    }
    
    public void setTotal(double total) {
        String totalString = Double.toString(total); 
        txtTotal.setText(totalString); 
    }
    
    public void displayUpdateMessage() {
        JOptionPane.showMessageDialog(null, "Income updated successfully.", "Income Update Successful", JOptionPane.INFORMATION_MESSAGE);                    
    }


    // Allows for dynamic updating of value for total income 
    // Handler kept in view because updates are only concerned with display and do not affect the model layer
    private class Changes implements ChangeListener{
            double totalVal;
            public void stateChanged(ChangeEvent e) {
                if(e.getSource() == spinSalary){
                    totalVal = (double)spinSalary.getValue() + (double)spinInvestments.getValue() + (double)spinBonus.getValue() + (double)spinTax.getValue();
                    txtTotal.setText(totalVal+"");
                }else if(e.getSource() == spinInvestments){
                    totalVal = (double)spinSalary.getValue() + (double)spinInvestments.getValue() + (double)spinBonus.getValue() + (double)spinTax.getValue();
                    txtTotal.setText(totalVal+"");
                }else if(e.getSource() == spinBonus){
                    totalVal = (double)spinSalary.getValue() + (double)spinInvestments.getValue() + (double)spinBonus.getValue() + (double)spinTax.getValue();
                    txtTotal.setText(totalVal+"");
                }else if(e.getSource() == spinTax){
                    totalVal = (double)spinSalary.getValue() + (double)spinInvestments.getValue() + (double)spinBonus.getValue() + (double)spinTax.getValue();
                    txtTotal.setText(totalVal+"");
                }            
            }
        }
 
    // Fills in the fields based on user's information as soon as they navigate to the page
    public void setValues(double salary, double investments, double bonus, double tax, double total) {
        spinSalary.setValue(salary); 
        spinInvestments.setValue(investments); 
        spinBonus.setValue(bonus); 
        spinTax.setValue(tax); 
        txtTotal.setText(Double.toString(total)); 
    }
    
   
    public void clearValues() {
        spinSalary.setValue(0.0); 
        spinInvestments.setValue(0.0);
        spinBonus.setValue(0.0); 
        spinTax.setValue(0.0);
        txtTotal.setText(""); 
    }
     

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblPercentage = new javax.swing.JLabel();
        lblCategory = new javax.swing.JLabel();
        lblSalary = new javax.swing.JLabel();
        lblInvestments = new javax.swing.JLabel();
        lblTotal = new javax.swing.JLabel();
        lblBonus = new javax.swing.JLabel();
        lblGrants = new javax.swing.JLabel();
        spinSalary = new javax.swing.JSpinner();
        spinBonus = new javax.swing.JSpinner();
        spinTax = new javax.swing.JSpinner();
        spinInvestments = new javax.swing.JSpinner();
        txtTotal = new javax.swing.JTextField();
        btnUpdate = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setLayout(null);

        lblPercentage.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblPercentage.setForeground(new java.awt.Color(255, 255, 255));
        lblPercentage.setText("Monthly Value");
        add(lblPercentage);
        lblPercentage.setBounds(541, 13, 300, 22);

        lblCategory.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblCategory.setForeground(new java.awt.Color(255, 255, 255));
        lblCategory.setText("Category of Earnings");
        add(lblCategory);
        lblCategory.setBounds(33, 13, 250, 22);

        lblSalary.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblSalary.setForeground(new java.awt.Color(255, 255, 255));
        lblSalary.setText("Salary");
        add(lblSalary);
        lblSalary.setBounds(33, 67, 120, 22);

        lblInvestments.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblInvestments.setForeground(new java.awt.Color(255, 255, 255));
        lblInvestments.setText("Investments");
        add(lblInvestments);
        lblInvestments.setBounds(33, 119, 160, 22);

        lblTotal.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblTotal.setForeground(new java.awt.Color(255, 255, 255));
        lblTotal.setText("Total Income");
        add(lblTotal);
        lblTotal.setBounds(33, 273, 190, 22);

        lblBonus.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblBonus.setForeground(new java.awt.Color(255, 255, 255));
        lblBonus.setText("Bonus");
        add(lblBonus);
        lblBonus.setBounds(33, 171, 120, 22);

        lblGrants.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblGrants.setForeground(new java.awt.Color(255, 255, 255));
        lblGrants.setText("Grants/Tax Credits");
        add(lblGrants);
        lblGrants.setBounds(33, 223, 200, 22);

        spinSalary.addChangeListener(new Changes());
        spinSalary.setModel(new javax.swing.SpinnerNumberModel(Double.valueOf(0.0d), Double.valueOf(0.0d), null, Double.valueOf(1.0d)));
        add(spinSalary);
        spinSalary.setBounds(490, 65, 271, 22);

        spinBonus.addChangeListener(new Changes());
        spinBonus.setModel(new javax.swing.SpinnerNumberModel(Double.valueOf(0.0d), Double.valueOf(0.0d), null, Double.valueOf(1.0d)));
        add(spinBonus);
        spinBonus.setBounds(490, 169, 271, 22);

        spinTax.addChangeListener(new Changes());
        spinTax.setModel(new javax.swing.SpinnerNumberModel(Double.valueOf(0.0d), Double.valueOf(0.0d), null, Double.valueOf(1.0d)));
        add(spinTax);
        spinTax.setBounds(490, 221, 271, 22);

        spinInvestments.addChangeListener(new Changes());
        spinInvestments.setModel(new javax.swing.SpinnerNumberModel(Double.valueOf(0.0d), Double.valueOf(0.0d), null, Double.valueOf(1.0d)));
        add(spinInvestments);
        spinInvestments.setBounds(490, 117, 271, 22);

        txtTotal.setEditable(false);
        txtTotal.setFocusable(false);
        add(txtTotal);
        txtTotal.setBounds(490, 275, 271, 22);

        btnUpdate.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        btnUpdate.setText("Update");
        add(btnUpdate);
        btnUpdate.setBounds(237, 395, 100, 25);

        btnClear.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        btnClear.setText("Clear");
        add(btnClear);
        btnClear.setBounds(463, 395, 100, 25);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/purple.jpg"))); // NOI18N
        jLabel1.setText("jLabel1");
        add(jLabel1);
        jLabel1.setBounds(-50, -40, 880, 490);
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel lblBonus;
    private javax.swing.JLabel lblCategory;
    private javax.swing.JLabel lblGrants;
    private javax.swing.JLabel lblInvestments;
    private javax.swing.JLabel lblPercentage;
    private javax.swing.JLabel lblSalary;
    private javax.swing.JLabel lblTotal;
    private javax.swing.JSpinner spinBonus;
    private javax.swing.JSpinner spinInvestments;
    private javax.swing.JSpinner spinSalary;
    private javax.swing.JSpinner spinTax;
    private javax.swing.JTextField txtTotal;
    // End of variables declaration//GEN-END:variables
}
